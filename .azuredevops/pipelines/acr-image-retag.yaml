---

name: $(Build.SourceBranchName)-$(Date:yyyyMMdd)_$(Rev:r)
trigger: none
pr: none

parameters:
  - name: sourceRegistry
    displayName: Source Container Registry
    type: string
    values:
      - acrukshubdevcommgt
      - acrukshubprodcommgt
    default: acrukshubdevcommgt

  - name: selectImageTag
    displayName: Select Image Tag
    type: string
    values:
      - development
      - nft
      - integration
      - preprod
    default: development

  - name: destRegistry
    displayName: Destination Container Registry
    type: string
    values:
      - acrukshubdevcommgt
      - acrukshubprodcommgt
    default: acrukshubprodcommgt

  - name: addImageTag
    displayName: Target Image Tag
    type: string
    values:
      - development
      - nft
      - integration
      - preprod
      - production
    default: integration

variables:
  - group: DEV_hub_backend_remote_state

stages:
- stage: re_tag_stage
  displayName: ACR re-tag
  jobs:
  - job: re_tag
    pool:
      name: private-pool-prod-uks
    displayName: Update/copy Docker images with new tag
    variables:
      SRC_REGISTRY: ${{ parameters.sourceRegistry }}
      DEST_REGISTRY: ${{ parameters.destRegistry }}
      SELECT_IMAGE_TAG: ${{ parameters.selectImageTag }}
      ADD_IMAGE_TAG: ${{ parameters.addImageTag }}
    steps:
    - task: AzureCLI@2
      name: tag_integration
      displayName: Publish $(SELECT_IMAGE_TAG) images to ${{ parameters.addImageTag }}
      inputs:
        azureSubscription: sc-communication-management-prod
        addSpnToEnvironment: true
        failOnStandardError: false
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          # Prerequisite: A DNS A record for the chosen Dev ACR must exist in the Prod privatelink.azurecr.io zone, resolving to the public IP for that ACR
          set -eo pipefail
          echo "##[debug] Authenticating with container registry ${SRC_REGISTRY}..."
          az acr login --name ${SRC_REGISTRY}
          # az acr check-health --name ${SRC_REGISTRY} --yes
          if [[ "${SRC_REGISTRY}" == ${DEST_REGISTRY} ]]; then
            src_reg_prefix="${SRC_REGISTRY}.azurecr.io/" # omitted when the source registry is in a different subscription
          else
            [[ "${SRC_REGISTRY}" =~ dev ]] && cmdopt_sub="--subscription ${TF_VAR_HUB_SUBSCRIPTION_ID}"
            source_registry_id=$(az acr show --name ${SRC_REGISTRY} ${cmdopt_sub} --query id --output tsv)
            cmdopt_reg="--registry ${source_registry_id}" # needed when the source registry is in a different subscription
            echo "##[debug] Authenticating with container registry ${DEST_REGISTRY}..."
            az acr login --name ${DEST_REGISTRY}
            # az acr check-health --name ${DEST_REGISTRY} --yes
          fi
          [[ "${DEST_REGISTRY}" =~ dev ]] && az account set -s ${TF_VAR_HUB_SUBSCRIPTION_ID}
          for repo in $(az acr repository list --name ${SRC_REGISTRY} --output tsv); do
            echo "##[debug] Importing ${repo}:${SELECT_IMAGE_TAG}..."
            az acr import --name ${DEST_REGISTRY} --source ${src_reg_prefix}${repo}:${SELECT_IMAGE_TAG} --image ${repo}:${ADD_IMAGE_TAG} ${cmdopt_reg} --force
            if [[ "${SRC_REGISTRY}" != ${DEST_REGISTRY} ]]; then
              # image_sha=$(az acr manifest show-metadata --registry ${SRC_REGISTRY} --name ${repo}:${SELECT_IMAGE_TAG} --query digest --output tsv --only-show-errors)
              image_sha=$(az acr repository show --name ${SRC_REGISTRY} --image ${repo}:${SELECT_IMAGE_TAG} --query digest --output tsv)
              #for tag in $(az acr manifest list-metadata --registry ${SRC_REGISTRY} --name ${repo} --query "[?digest=='${image_sha}'].tags[]" --output tsv --only-show-errors | grep -E '^(pr[0-9]+|[a-f0-9]{7})$'); do
              for tag in $(az acr repository show --name ${SRC_REGISTRY} --image ${repo}@${image_sha} --query "tags" --output tsv | grep -E '^(pr[0-9]+|[a-f0-9]{7})$'); do
                echo "##[debug] Adding tag ${repo}:${tag}..."
                az acr import --name ${DEST_REGISTRY} --source ${DEST_REGISTRY}.azurecr.io/${repo}:${ADD_IMAGE_TAG} --image ${repo}:${tag} --force
              done
              echo
            fi
          done
