name: communication-management

services:
  db:
    image: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    restart: always
    ports:
      - 5432:5432
    environment:
      - POSTGRES_DB=${DATABASE_NAME}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_USER=${DATABASE_USER}
      - SSLMODE=${DATABASE_SSLMODE}
    volumes:
      - ./pgdata:/var/lib/postgresql/pgdata
    profiles:
      - dev

  notifications-api:
    container_name: notifications-api
    network_mode: host
    build:
      context: ./src/notifications-api
      dockerfile: Dockerfile
      additional_contexts:
        root_dir: .
    environment:
      - AzureWebJobsStorage=UseDevelopmentStorage=true
      - APPLICATION_ID=${APPLICATION_ID}
      - ASPNETCORE_URLS=http://*:7072
      - DATABASE_HOST=${DATABASE_HOST}
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_SSLMODE=${DATABASE_SSLMODE}
      - DATABASE_USER=${DATABASE_USER}
      - NOTIFY_API_KEY=${NOTIFY_API_KEY}
      - NOTIFY_API_URL=${NOTIFY_API_URL}
      - OAUTH2_API_KEY=${OAUTH2_API_KEY}
      - OAUTH2_API_KID=${OAUTH2_API_KID}
      - OAUTH2_TOKEN_URL=${OAUTH2_TOKEN_URL}
      - PRIVATE_KEY=${PRIVATE_KEY}
    volumes:
      - ./log/function/communication-management:/tmp/Functions/Host
