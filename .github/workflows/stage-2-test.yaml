name: "Test stage"

on:
  workflow_call:
    inputs:
      build_datetime:
        description: "Build datetime, set by the CI/CD pipeline workflow"
        required: true
        type: string
      build_timestamp:
        description: "Build timestamp, set by the CI/CD pipeline workflow"
        required: true
        type: string
      build_epoch:
        description: "Build epoch, set by the CI/CD pipeline workflow"
        required: true
        type: string
      python_version:
        description: "Python version, set by the CI/CD pipeline workflow"
        required: true
        type: string

jobs:
  set-up-dependencies:
    name: "Set up dependencies"
    runs-on: ubuntu-latest
    steps:
      - name: "Install Python"
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          python -m pip install --upgrade pip

  test-unit:
    name: "Unit tests"
    needs: set-up-dependencies
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v4

      - name: "Install dependencies"
        run: |
          pip install pipenv
          pipenv install --dev --system

      - name: "Run unit test suite"
        run: |
          pytest --cov=src --cov-append

      - name: "Check coverage file"
        run: ls -la

      - name: "Upload coverage data"
        uses: actions/upload-artifact@v3
        with:
          name: coverage-unit
          path: .coverage

  test-integration:
    name: "Integration tests"
    needs: set-up-dependencies
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v4

      - name: "Install dependencies"
        run: |
          pip install pipenv
          pipenv install --dev --system

      - name: "Run integration test suite"
        run: |
          pytest --cov=src --cov-append

      - name: "Check coverage file"
        run: ls -la

      - name: "Upload coverage data"
        uses: actions/upload-artifact@v3
        with:
          name: coverage-integration
          path: .coverage

  test-coverage:
    name: "Test coverage"
    needs: [test-unit, test-integration]
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v4

      - name: "Set up Python"
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: "Install dependencies"
        run: |
          pip install pipenv
          pipenv install --dev --system

      - name: "Download unit test coverage artifact"
        uses: actions/download-artifact@v3
        with:
          name: coverage-unit
          path: coverage-data/unit

      - name: "Download integration test coverage artifact"
        uses: actions/download-artifact@v3
        with:
          name: coverage-integration
          path: coverage-data/integration

      - name: "Combine coverage data"
        run: |
          cp coverage-data/unit/.coverage .coverage.unit
          cp coverage-data/integration/.coverage .coverage.integration
          coverage combine .coverage.unit .coverage.integration

      - name: "Generate coverage report"
        run: |
          coverage report
